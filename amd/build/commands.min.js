define("tiny_inspiration/commands",["exports","editor_tiny/utils","core/str","tiny_inspiration/common","./quotes"],(function(_exports,_utils,_str,_common,_quotes){var obj;
/**
   * Tiny inspiration commands
   *
   * @module     tiny_inspiration/commands
   * @copyright  2024 Andrew Lyons <andrew@nicols.co.uk>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetupCommands=void 0,_quotes=(obj=_quotes)&&obj.__esModule?obj:{default:obj};_exports.getSetupCommands=async()=>{const[buttonText,buttonImage]=await Promise.all([(0,_str.get_string)("buttontitle",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.buttonName,buttonImage.html),editor.ui.registry.addMenuItem(_common.buttonName,{icon:_common.buttonName,text:buttonText,onAction:()=>{const randomQuote=_quotes.default[Math.floor(Math.random()*_quotes.default.length)];let quote=randomQuote.quote;randomQuote.by&&(quote+="<br>".concat(randomQuote.by)),editor.insertContent("<blockquote>".concat(quote,"</blockquote>"))}})}}}));

//# sourceMappingURL=commands.min.js.map